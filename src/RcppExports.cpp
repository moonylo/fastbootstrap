// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// test_rand_gen_host
Rcpp::NumericVector test_rand_gen_host(const int n, const int seed);
RcppExport SEXP _fastbootstrap_test_rand_gen_host(SEXP nSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(test_rand_gen_host(n, seed));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_opencl_bootstrap_manager_float();

static const R_CallMethodDef CallEntries[] = {
    {"_fastbootstrap_test_rand_gen_host", (DL_FUNC) &_fastbootstrap_test_rand_gen_host, 2},
    {"_rcpp_module_boot_opencl_bootstrap_manager_float", (DL_FUNC) &_rcpp_module_boot_opencl_bootstrap_manager_float, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastbootstrap(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
